{"ast":null,"code":"import _slicedToArray from \"/Users/Levi/Desktop/Levi/EDA_Projects/spike/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\nvar _jsxFileName = \"/Users/Levi/Desktop/Levi/EDA_Projects/spike/src/components/App/Soup/Soup.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { useHistory } from \"react-router-dom/cjs/react-router-dom.min\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Soup() {\n  _s();\n\n  var _useState = useState('hide-hint'),\n      _useState2 = _slicedToArray(_useState, 2),\n      toggle = _useState2[0],\n      setToggle = _useState2[1];\n\n  var history = useHistory(); // Supports tabbing inside code block\n\n  var textareas = document.getElementsByTagName('textarea');\n  var count = textareas.length;\n\n  for (var i = 0; i < count; i++) {\n    textareas[i].onkeydown = function (e) {\n      if (e.keyCode == 9 || e.which == 9) {\n        e.preventDefault();\n        var s = this.selectionStart;\n        this.value = this.value.substring(0, this.selectionStart) + \"\\t\" + this.value.substring(this.selectionEnd);\n        this.selectionEnd = s + 1.5;\n      }\n    };\n  }\n\n  var checkAnswer = function checkAnswer() {\n    if (parsed.body.header.h1) {\n      console.log('correct!');\n    } else {\n      console.log('incorrect!');\n    }\n  }; // let toggleDisplay = 'hide-hint';\n\n\n  var defaultAnswer = \"\\n    <html>\\n        <head>\\n        <head>\\n        <body>\\n        </body>\\n    </html>\\n    \";\n  var viewSolution = \"\\n    <html>\\n        <head>\\n        <head>\\n        <body>\\n            <header>\\n                <h1> Carrots </h1>\\n            </header>\\n        </body>\\n    </html>\\n    \";\n\n  var _useState3 = useState(defaultAnswer),\n      _useState4 = _slicedToArray(_useState3, 2),\n      codeBlock = _useState4[0],\n      setCodeBlock = _useState4[1];\n\n  var parser = new DOMParser();\n  var parsed = parser.parseFromString(codeBlock, \"text/html\"); // codeBlock.split(' ').join('').replace(/(\\r\\n|\\n|\\r)/gm, \"\")\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \" Soup \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"task\",\n        children: \"Add a header element between the body tags containing an h1 element with your favorite food!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: codeBlock,\n      onChange: function onChange(e) {\n        return setCodeBlock(e.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pageButtons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: function onClick() {\n          return toggle ? setToggle('') : setToggle('hide-hint');\n        },\n        children: \"Hint\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: function onClick() {\n          return setCodeBlock(viewSolution);\n        },\n        children: \"View Solution\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: function onClick() {\n          return setCodeBlock(defaultAnswer);\n        },\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: function onClick() {\n          return console.log(parsed);\n        },\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: toggle,\n      children: \"Does header have an opening and closing tag?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: function onClick() {\n        return history.push('/');\n      },\n      children: \"Home\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Soup, \"EtMImGTNgV/BbBKRbbGZ2gvvBls=\", false, function () {\n  return [useHistory];\n});\n\n_c = Soup;\nexport default Soup;\n\nvar _c;\n\n$RefreshReg$(_c, \"Soup\");","map":{"version":3,"sources":["/Users/Levi/Desktop/Levi/EDA_Projects/spike/src/components/App/Soup/Soup.jsx"],"names":["useState","useHistory","Soup","toggle","setToggle","history","textareas","document","getElementsByTagName","count","length","i","onkeydown","e","keyCode","which","preventDefault","s","selectionStart","value","substring","selectionEnd","checkAnswer","parsed","body","header","h1","console","log","defaultAnswer","viewSolution","codeBlock","setCodeBlock","parser","DOMParser","parseFromString","target","push"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\nimport { useHistory } from \"react-router-dom/cjs/react-router-dom.min\";\n\n\nfunction Soup() {\n    \n    const [toggle, setToggle] = useState('hide-hint');\n    const history = useHistory()\n    \n    // Supports tabbing inside code block\n    \n    var textareas = document.getElementsByTagName('textarea');\n    var count = textareas.length;\n    for (var i = 0; i < count; i++) {\n        textareas[i].onkeydown = function (e) {\n            if (e.keyCode == 9 || e.which == 9) {\n                e.preventDefault();\n                var s = this.selectionStart;\n                this.value = this.value.substring(0, this.selectionStart) + \"\\t\" + this.value.substring(this.selectionEnd);\n                this.selectionEnd = s + 1.5;\n            }\n        }\n    }\n\n    const checkAnswer = () => {\n        if (parsed.body.header.h1) {\n            console.log('correct!')\n        } else {\n            console.log('incorrect!')\n        }\n    }\n    \n    // let toggleDisplay = 'hide-hint';\n    \n    let defaultAnswer = `\n    <html>\n        <head>\n        <head>\n        <body>\n        </body>\n    </html>\n    `;\n    \n    let viewSolution = `\n    <html>\n        <head>\n        <head>\n        <body>\n            <header>\n                <h1> Carrots </h1>\n            </header>\n        </body>\n    </html>\n    `;\n    \n    const [codeBlock, setCodeBlock] = useState(defaultAnswer)\n    \n    const parser = new DOMParser();\n    \n    const parsed = parser.parseFromString(codeBlock, \"text/html\");\n\n    // codeBlock.split(' ').join('').replace(/(\\r\\n|\\n|\\r)/gm, \"\")\n\n\n    return (\n        <div>\n            <h1> Soup </h1>\n            <div className=\"wrapper\">\n            <h2 className=\"task\">Add a header element between the body tags containing an h1 element with your favorite food!</h2>\n            </div>\n            <textarea value={codeBlock} onChange={(e) => setCodeBlock(e.target.value)}></textarea>\n            <div className=\"pageButtons\">\n                <button onClick={() => toggle ? setToggle('') : setToggle('hide-hint')}>Hint</button>\n                <button onClick={() => setCodeBlock(viewSolution)}>View Solution</button>\n                <button onClick={() => setCodeBlock(defaultAnswer)}>Reset</button>\n                <button onClick={() => console.log(parsed)}>Submit</button>\n            </div>\n            <h3 className={toggle}>Does header have an opening and closing tag?</h3>\n            <button onClick={() => history.push('/')}>Home</button>\n        </div>\n    )\n}\n\nexport default Soup;"]},"metadata":{},"sourceType":"module"}