{"ast":null,"code":"import _slicedToArray from \"/Users/Levi/Desktop/Levi/EDA_Projects/spike/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\nvar _jsxFileName = \"/Users/Levi/Desktop/Levi/EDA_Projects/spike/src/components/App/Find/Find.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { useHistory } from \"react-router-dom/cjs/react-router-dom.min\";\nimport homeblue from '../homeicon_blue';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Find() {\n  _s();\n\n  var _useState = useState('hide-hint'),\n      _useState2 = _slicedToArray(_useState, 2),\n      toggle = _useState2[0],\n      setToggle = _useState2[1];\n\n  var history = useHistory(); // Supports tabbing inside code block\n\n  var textareas = document.getElementsByTagName('textarea');\n  var count = textareas.length;\n\n  for (var i = 0; i < count; i++) {\n    textareas[i].onkeydown = function (e) {\n      if (e.keyCode == 9 || e.which == 9) {\n        e.preventDefault();\n        var s = this.selectionStart;\n        this.value = this.value.substring(0, this.selectionStart) + \"\\t\" + this.value.substring(this.selectionEnd);\n        this.selectionEnd = s + 1.5;\n      }\n    };\n  }\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      answerResult = _useState4[0],\n      setAnswerResult = _useState4[1];\n\n  var checkAnswer = function checkAnswer() {\n    var parsedExpanded = parsed.lastChild.lastChild.childNodes;\n\n    try {\n      if (parsedExpanded.length < 2) {\n        setAnswerResult('incorrect!');\n      }\n\n      if (parsedExpanded[1] === undefined || parsedExpanded[1].firstElementChild === undefined) {\n        setAnswerResult('incorrect!');\n      }\n\n      if (parsedExpanded[1].nodeName === 'HEADER' && parsedExpanded[1].firstElementChild.nodeName === 'H1') {\n        setAnswerResult('correct!');\n      } else {\n        setAnswerResult('incorrect!');\n      }\n    } catch (_unused) {\n      setAnswerResult('incorrect!');\n    }\n  }; // let toggleDisplay = 'hide-hint';\n\n\n  var defaultAnswer = \"\\n    <html>\\n        <head>\\n        </head>\\n        <body>\\n        </body>\\n    </html>\\n    \";\n  var viewSolution = \"\\n    <html>\\n        <head>\\n        </head>\\n        <body>\\n            <header>\\n                <h1> Pizza </h1>\\n            </header>\\n        </body>\\n    </html>\\n    \";\n\n  var _useState5 = useState(defaultAnswer),\n      _useState6 = _slicedToArray(_useState5, 2),\n      codeBlock = _useState6[0],\n      setCodeBlock = _useState6[1]; // ORIGNAL METHOD\n\n\n  var parser = new DOMParser();\n  var parsed = parser.parseFromString(codeBlock, \"text/html\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: answerResult\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"task\",\n        children: \"Add a header element between the body tags containing an h1 element with your favorite food!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: codeBlock,\n      onChange: function onChange(e) {\n        return setCodeBlock(e.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: toggle,\n      children: \"Does header have an opening and closing tag?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pageButtons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: function onClick() {\n          return toggle ? setToggle('') : setToggle('hide-hint');\n        },\n        children: \"Hint\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: function onClick() {\n          return setCodeBlock(viewSolution);\n        },\n        children: \"View Solution\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: function onClick() {\n          setCodeBlock(defaultAnswer);\n          setAnswerResult('');\n        },\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: function onClick() {\n          return checkAnswer();\n        },\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"home\",\n      onClick: function onClick() {\n        return history.push('/');\n      },\n      children: \"Home\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Find, \"kSO2y8POkJ4CFndowRk66eY//ws=\", false, function () {\n  return [useHistory];\n});\n\n_c = Find;\nexport default Find;\n\nvar _c;\n\n$RefreshReg$(_c, \"Find\");","map":{"version":3,"sources":["/Users/Levi/Desktop/Levi/EDA_Projects/spike/src/components/App/Find/Find.jsx"],"names":["useState","useHistory","homeblue","Find","toggle","setToggle","history","textareas","document","getElementsByTagName","count","length","i","onkeydown","e","keyCode","which","preventDefault","s","selectionStart","value","substring","selectionEnd","answerResult","setAnswerResult","checkAnswer","parsedExpanded","parsed","lastChild","childNodes","undefined","firstElementChild","nodeName","defaultAnswer","viewSolution","codeBlock","setCodeBlock","parser","DOMParser","parseFromString","target","push"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\nimport { useHistory } from \"react-router-dom/cjs/react-router-dom.min\";\nimport homeblue from '../homeicon_blue'\n\n\nfunction Find() {\n\n    const [toggle, setToggle] = useState('hide-hint');\n    const history = useHistory()\n\n    // Supports tabbing inside code block\n\n    var textareas = document.getElementsByTagName('textarea');\n    var count = textareas.length;\n    for (var i = 0; i < count; i++) {\n        textareas[i].onkeydown = function (e) {\n            if (e.keyCode == 9 || e.which == 9) {\n                e.preventDefault();\n                var s = this.selectionStart;\n                this.value = this.value.substring(0, this.selectionStart) + \"\\t\" + this.value.substring(this.selectionEnd);\n                this.selectionEnd = s + 1.5;\n            }\n        }\n    }\n\n    let [answerResult, setAnswerResult] = useState('');\n\n    const checkAnswer = () => {\n\n        let parsedExpanded = parsed.lastChild.lastChild.childNodes;\n\n        try {\n            if (parsedExpanded.length < 2) {\n                setAnswerResult('incorrect!');\n            } if (parsedExpanded[1] === undefined || parsedExpanded[1].firstElementChild === undefined) {\n                setAnswerResult('incorrect!');\n            }\n            if (parsedExpanded[1].nodeName === 'HEADER' && parsedExpanded[1].firstElementChild.nodeName === 'H1') {\n                setAnswerResult('correct!')\n            } else {\n                setAnswerResult('incorrect!');\n            }\n        } catch {\n            setAnswerResult('incorrect!');\n        }\n    }\n\n    // let toggleDisplay = 'hide-hint';\n\n    let defaultAnswer = `\n    <html>\n        <head>\n        </head>\n        <body>\n        </body>\n    </html>\n    `;\n\n    let viewSolution = `\n    <html>\n        <head>\n        </head>\n        <body>\n            <header>\n                <h1> Pizza </h1>\n            </header>\n        </body>\n    </html>\n    `;\n\n    const [codeBlock, setCodeBlock] = useState(defaultAnswer)\n\n    // ORIGNAL METHOD\n\n    const parser = new DOMParser();\n\n    const parsed = parser.parseFromString(codeBlock, \"text/html\");\n\n    return (\n        <div>\n            <div className=\"wrapper\">\n                <h1>{answerResult}</h1>\n                <h2 className=\"task\">Add a header element between the body tags containing an h1 element with your favorite food!</h2>\n            </div>\n            <textarea value={codeBlock} onChange={(e) => setCodeBlock(e.target.value)}></textarea>\n            <h3 className={toggle}>Does header have an opening and closing tag?</h3>\n            <div className=\"pageButtons\">\n                <button onClick={() => toggle ? setToggle('') : setToggle('hide-hint')}>Hint</button>\n                <button onClick={() => setCodeBlock(viewSolution)}>View Solution</button>\n                <button onClick={() => {\n                    setCodeBlock(defaultAnswer);\n                    setAnswerResult('');\n                }\n                }>Reset</button>\n                <button onClick={() => checkAnswer()}>Submit</button>\n            </div>\n            <button className='home' onClick={() => history.push('/')}>Home</button>\n        </div>\n    )\n}\n\nexport default Find;"]},"metadata":{},"sourceType":"module"}