{"ast":null,"code":"var _jsxFileName = \"/Users/Levi/Desktop/Levi/EDA_Projects/movie-saga/src/components/Details/Details.jsx\",\n    _s = $RefreshSig$();\n\nimport { useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Details() {\n  _s();\n\n  var movieList = useSelector(function (store) {\n    return store.movies;\n  });\n  var params = useParams();\n  var movieId = params.movieId;\n  var movie = movieList.find(function (movie) {\n    return movie.id === Number(movieId);\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [movie.Details, \"Details\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_s(Details, \"eBIK4kKwU9aI1OS632xZvA8BHlA=\", false, function () {\n  return [useSelector, useParams];\n});\n\n_c = Details;\nexport default Details;\n\nvar _c;\n\n$RefreshReg$(_c, \"Details\");","map":{"version":3,"sources":["/Users/Levi/Desktop/Levi/EDA_Projects/movie-saga/src/components/Details/Details.jsx"],"names":["useSelector","useParams","Details","movieList","store","movies","params","movieId","movie","find","id","Number"],"mappings":";;;AAAA,SAASA,WAAT,QAA4B,aAA5B;AACA,SAASC,SAAT,QAA0B,kBAA1B;;;;AAEA,SAASC,OAAT,GAAoB;AAAA;;AAEhB,MAAMC,SAAS,GAAGH,WAAW,CAAC,UAAAI,KAAK;AAAA,WAAIA,KAAK,CAACC,MAAV;AAAA,GAAN,CAA7B;AACA,MAAIC,MAAM,GAAGL,SAAS,EAAtB;AAEA,MAAIM,OAAO,GAAGD,MAAM,CAACC,OAArB;AACA,MAAIC,KAAK,GAAGL,SAAS,CAACM,IAAV,CAAe,UAAAD,KAAK;AAAA,WAAIA,KAAK,CAACE,EAAN,KAAaC,MAAM,CAACJ,OAAD,CAAvB;AAAA,GAApB,CAAZ;AAEA,sBACI;AAAA,2BACA;AAAA,iBAAKC,KAAK,CAACN,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AADA,mBADJ;AAKH;;GAbQA,O;UAEaF,W,EACLC,S;;;KAHRC,O;AAeT,eAAeA,OAAf","sourcesContent":["import { useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\n\nfunction Details () {\n\n    const movieList = useSelector(store => store.movies);\n    let params = useParams();\n    \n    let movieId = params.movieId;\n    let movie = movieList.find(movie => movie.id === Number(movieId));\n\n    return (\n        <>\n        <h1>{movie.Details}Details</h1>\n        </>\n    )\n}\n\nexport default Details;"]},"metadata":{},"sourceType":"module"}