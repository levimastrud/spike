{"ast":null,"code":"import _slicedToArray from \"/Users/Levi/Desktop/Levi/EDA_Projects/spike/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\nvar _jsxFileName = \"/Users/Levi/Desktop/Levi/EDA_Projects/spike/src/components/App/Soup/Soup.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { useHistory } from \"react-router-dom/cjs/react-router-dom.min\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Soup() {\n  _s();\n\n  var _useState = useState('hide-hint'),\n      _useState2 = _slicedToArray(_useState, 2),\n      toggle = _useState2[0],\n      setToggle = _useState2[1];\n\n  var history = useHistory(); // let toggleDisplay = 'hide-hint';\n\n  var defaultAnswer = \"\\n    <html>\\n        <head>\\n        <head>\\n        <body>\\n        </body>\\n    </html>\\n    \";\n\n  var _useState3 = useState(defaultAnswer),\n      _useState4 = _slicedToArray(_useState3, 2),\n      codeBlock = _useState4[0],\n      setCodeBlock = _useState4[1];\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \" Soup \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Add a header element with your favorite food!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: codeBlock,\n      onChange: function onChange(e) {\n        return setCodeBlock(e.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: toggle,\n      children: \"Does header have an opening and closing tag?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pageButtons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: function onClick() {\n          return toggle ? setToggle('') : setToggle('hide-hint');\n        },\n        children: \"Hint\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"View Solution\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: function onClick() {\n          return setCodeBlock({\n            defaultAnswer: defaultAnswer\n          });\n        },\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: function onClick() {\n          return console.log(codeBlock);\n        },\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: function onClick() {\n        return history.push('/');\n      },\n      children: \"Home\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Soup, \"EtMImGTNgV/BbBKRbbGZ2gvvBls=\", false, function () {\n  return [useHistory];\n});\n\n_c = Soup;\nexport default Soup;\n\nvar _c;\n\n$RefreshReg$(_c, \"Soup\");","map":{"version":3,"sources":["/Users/Levi/Desktop/Levi/EDA_Projects/spike/src/components/App/Soup/Soup.jsx"],"names":["useState","useHistory","Soup","toggle","setToggle","history","defaultAnswer","codeBlock","setCodeBlock","e","target","value","console","log","push"],"mappings":";;;;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,UAAT,QAA2B,2CAA3B;;;AAGA,SAASC,IAAT,GAAiB;AAAA;;AAEb,kBAA4BF,QAAQ,CAAC,WAAD,CAApC;AAAA;AAAA,MAAOG,MAAP;AAAA,MAAeC,SAAf;;AACA,MAAMC,OAAO,GAAGJ,UAAU,EAA1B,CAHa,CAKb;;AAEA,MAAIK,aAAa,qGAAjB;;AASA,mBAAkCN,QAAQ,CAACM,aAAD,CAA1C;AAAA;AAAA,MAAOC,SAAP;AAAA,MAAkBC,YAAlB;;AAGA,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAU,MAAA,KAAK,EAAED,SAAjB;AAA4B,MAAA,QAAQ,EAAE,kBAACE,CAAD;AAAA,eAAOD,YAAY,CAACC,CAAC,CAACC,MAAF,CAASC,KAAV,CAAnB;AAAA;AAAtC;AAAA;AAAA;AAAA;AAAA,YAHJ,eAII;AAAI,MAAA,SAAS,EAAKR,MAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ,eAKI;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,8BACA;AAAQ,QAAA,OAAO,EAAE;AAAA,iBAAMA,MAAM,GAAGC,SAAS,CAAC,EAAD,CAAZ,GAAmBA,SAAS,CAAC,WAAD,CAAxC;AAAA,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,eAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFA,eAGA;AAAQ,QAAA,OAAO,EAAE;AAAA,iBAAMI,YAAY,CAAC;AAACF,YAAAA,aAAa,EAAbA;AAAD,WAAD,CAAlB;AAAA,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHA,eAIA;AAAQ,QAAA,OAAO,EAAE;AAAA,iBAAMM,OAAO,CAACC,GAAR,CAAYN,SAAZ,CAAN;AAAA,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJA;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ,eAWI;AAAQ,MAAA,OAAO,EAAE;AAAA,eAAMF,OAAO,CAACS,IAAR,CAAa,GAAb,CAAN;AAAA,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAeH;;GAlCQZ,I;UAGWD,U;;;KAHXC,I;AAoCT,eAAeA,IAAf","sourcesContent":["import { useState } from \"react\";\nimport { useHistory } from \"react-router-dom/cjs/react-router-dom.min\";\n\n\nfunction Soup () {\n\n    const [toggle, setToggle] = useState('hide-hint');\n    const history = useHistory()\n\n    // let toggleDisplay = 'hide-hint';\n\n    let defaultAnswer = `\n    <html>\n        <head>\n        <head>\n        <body>\n        </body>\n    </html>\n    `;\n\n    const [codeBlock, setCodeBlock] = useState(defaultAnswer)\n\n\n    return (\n        <div>\n            <h1> Soup </h1>\n            <h2>Add a header element with your favorite food!</h2>\n            <textarea value={codeBlock} onChange={(e) => setCodeBlock(e.target.value)}></textarea>\n            <h3 className = { toggle }>Does header have an opening and closing tag?</h3>\n            <div className=\"pageButtons\">\n            <button onClick={() => toggle ? setToggle('') : setToggle('hide-hint')}>Hint</button>\n            <button>View Solution</button>\n            <button onClick={() => setCodeBlock({defaultAnswer})}>Reset</button>\n            <button onClick={() => console.log(codeBlock)}>Submit</button>\n            </div>       \n            <button onClick={() => history.push('/')}>Home</button>\n        </div>\n    )\n}\n\nexport default Soup;"]},"metadata":{},"sourceType":"module"}